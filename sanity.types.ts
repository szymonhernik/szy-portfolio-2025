// Query TypeMap
import "@sanity/client";

/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Settings = {
  _id: string;
  _type: "settings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  overview?: string;
  featuredProjects?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "project";
  }>;
};

export type SectionContent = {
  _type: "section-content";
  body?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet";
        markDefs?: Array<
          | {
              href?: string;
              _type: "link";
              _key: string;
            }
          | {
              itemId?: string;
              _type: "garden-item";
              _key: string;
            }
        >;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }
  >;
};

export type Carousel = {
  _type: "carousel";
  defaultCaption?: string;
  items?: Array<
    | {
        image?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
        };
        mobileImage?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
        };
        caption?: Array<
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
              listItem?: "bullet";
              markDefs?: Array<
                | {
                    href?: string;
                    _type: "link";
                    _key: string;
                  }
                | {
                    itemId?: string;
                    _type: "garden-item";
                    _key: string;
                  }
              >;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              alt?: string;
              _type: "image";
              _key: string;
            }
        >;
        _type: "imageSlide";
        _key: string;
      }
    | {
        video?: MuxVideo;
        mobileVideo?: MuxVideo;
        caption?: Array<
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
              listItem?: "bullet";
              markDefs?: Array<
                | {
                    href?: string;
                    _type: "link";
                    _key: string;
                  }
                | {
                    itemId?: string;
                    _type: "garden-item";
                    _key: string;
                  }
              >;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              alt?: string;
              _type: "image";
              _key: string;
            }
        >;
        _type: "videoSlide";
        _key: string;
      }
    | {
        content?: Array<
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
              listItem?: "bullet";
              markDefs?: Array<
                | {
                    href?: string;
                    _type: "link";
                    _key: string;
                  }
                | {
                    itemId?: string;
                    _type: "garden-item";
                    _key: string;
                  }
              >;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              alt?: string;
              _type: "image";
              _key: string;
            }
        >;
        caption?: Array<
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
              listItem?: "bullet";
              markDefs?: Array<
                | {
                    href?: string;
                    _type: "link";
                    _key: string;
                  }
                | {
                    itemId?: string;
                    _type: "garden-item";
                    _key: string;
                  }
              >;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              alt?: string;
              _type: "image";
              _key: string;
            }
        >;
        _type: "contentSlide";
        _key: string;
      }
  >;
};

export type SectionHeader = {
  _type: "section-header";
  title?: string;
};

export type Author = {
  _id: string;
  _type: "author";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  slug?: Slug;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  bio?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type Subproject = {
  _id: string;
  _type: "subproject";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  seoOverview?: string;
  mainImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  categories?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "category";
  }>;
  blocks?: Array<
    | ({
        _key: string;
      } & SectionHeader)
    | ({
        _key: string;
      } & Carousel)
    | ({
        _key: string;
      } & SectionContent)
  >;
};

export type Project = {
  _id: string;
  _type: "project";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  seoOverview?: string;
  hasSubprojects?: boolean;
  subprojects?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "subproject";
  }>;
  categories?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "category";
  }>;
  mainImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  body?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet";
        markDefs?: Array<
          | {
              href?: string;
              _type: "link";
              _key: string;
            }
          | {
              itemId?: string;
              _type: "garden-item";
              _key: string;
            }
        >;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }
  >;
  blocks?: Array<
    | ({
        _key: string;
      } & SectionHeader)
    | ({
        _key: string;
      } & Carousel)
    | ({
        _key: string;
      } & SectionContent)
  >;
};

export type GardenItem = {
  _id: string;
  _type: "gardenItem";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  gardenBlocks?: Array<
    | {
        image?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        caption?: string;
        _type: "imageWithCaption";
        _key: string;
      }
    | {
        text?: Array<
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
              listItem?: "bullet";
              markDefs?: Array<
                | {
                    href?: string;
                    _type: "link";
                    _key: string;
                  }
                | {
                    itemId?: string;
                    _type: "garden-item";
                    _key: string;
                  }
              >;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              alt?: string;
              _type: "image";
              _key: string;
            }
        >;
        _type: "textGarden";
        _key: string;
      }
  >;
};

export type Category = {
  _id: string;
  _type: "category";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type BlockContent = Array<
  | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
      listItem?: "bullet";
      markDefs?: Array<
        | {
            href?: string;
            _type: "link";
            _key: string;
          }
        | {
            itemId?: string;
            _type: "garden-item";
            _key: string;
          }
      >;
      level?: number;
      _type: "block";
      _key: string;
    }
  | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    }
>;

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type MuxVideo = {
  _type: "mux.video";
  asset?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "mux.videoAsset";
  };
};

export type MuxVideoAsset = {
  _type: "mux.videoAsset";
  status?: string;
  assetId?: string;
  playbackId?: string;
  filename?: string;
  thumbTime?: number;
  data?: MuxAssetData;
};

export type MuxAssetData = {
  _type: "mux.assetData";
  resolution_tier?: string;
  upload_id?: string;
  created_at?: string;
  id?: string;
  status?: string;
  max_stored_resolution?: string;
  passthrough?: string;
  encoding_tier?: string;
  master_access?: string;
  aspect_ratio?: string;
  duration?: number;
  max_stored_frame_rate?: number;
  mp4_support?: string;
  max_resolution_tier?: string;
  tracks?: Array<
    {
      _key: string;
    } & MuxTrack
  >;
  playback_ids?: Array<
    {
      _key: string;
    } & MuxPlaybackId
  >;
  static_renditions?: MuxStaticRenditions;
};

export type MuxStaticRenditions = {
  _type: "mux.staticRenditions";
  status?: string;
  files?: Array<
    {
      _key: string;
    } & MuxStaticRenditionFile
  >;
};

export type MuxStaticRenditionFile = {
  _type: "mux.staticRenditionFile";
  ext?: string;
  name?: string;
  width?: number;
  bitrate?: number;
  filesize?: number;
  height?: number;
};

export type MuxPlaybackId = {
  _type: "mux.playbackId";
  id?: string;
  policy?: string;
};

export type MuxTrack = {
  _type: "mux.track";
  id?: string;
  type?: string;
  max_width?: number;
  max_frame_rate?: number;
  duration?: number;
  max_height?: number;
};

export type AllSanitySchemaTypes =
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityFileAsset
  | Geopoint
  | Settings
  | SectionContent
  | Carousel
  | SectionHeader
  | Author
  | Subproject
  | Project
  | GardenItem
  | Category
  | Slug
  | BlockContent
  | SanityImageCrop
  | SanityImageHotspot
  | SanityImageAsset
  | SanityAssetSourceData
  | SanityImageMetadata
  | MuxVideo
  | MuxVideoAsset
  | MuxAssetData
  | MuxStaticRenditions
  | MuxStaticRenditionFile
  | MuxPlaybackId
  | MuxTrack;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./sanity/queries/page.ts
// Variable: projectQuery
// Query: *[_type == "project"] {  _id,  _createdAt,  title,  "slug": slug.current,  mainImage {    "image": asset->url,    "lqip": asset->metadata.lqip,    "aspectRatio": asset->metadata.dimensions.aspectRatio,    alt,  }, }
export type ProjectQueryResult = Array<{
  _id: string;
  _createdAt: string;
  title: string | null;
  slug: string | null;
  mainImage: {
    image: string | null;
    lqip: string | null;
    aspectRatio: number | null;
    alt: string | null;
  } | null;
}>;
// Variable: gardenItemsQuery
// Query: *[_type == "gardenItem"] {  _id,  title,  "slug": slug.current,}
export type GardenItemsQueryResult = Array<{
  _id: string;
  title: string | null;
  slug: string | null;
}>;
// Variable: singleGardenItemQuery
// Query: *[_type == "gardenItem" && slug.current == $slug][0] {  _id,  title,  "slug": slug.current,  gardenBlocks[]{    _type == "imageWithCaption" => {      _type,      _key,      image {        "image": asset->url,        "lqip": asset->metadata.lqip,        "aspectRatio": asset->metadata.dimensions.aspectRatio,        alt,      },      caption    },    _type == "textGarden" => {      _key,      _type,      text    },  }}
export type SingleGardenItemQueryResult = {
  _id: string;
  title: string | null;
  slug: string | null;
  gardenBlocks: Array<
    | {
        _type: "imageWithCaption";
        _key: string;
        image: {
          image: string | null;
          lqip: string | null;
          aspectRatio: number | null;
          alt: null;
        } | null;
        caption: string | null;
      }
    | {
        _key: string;
        _type: "textGarden";
        text: Array<
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
              listItem?: "bullet";
              markDefs?: Array<
                | {
                    itemId?: string;
                    _type: "garden-item";
                    _key: string;
                  }
                | {
                    href?: string;
                    _type: "link";
                    _key: string;
                  }
              >;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              alt?: string;
              _type: "image";
              _key: string;
            }
        > | null;
      }
  > | null;
} | null;
// Variable: projectsAndSubprojectsQuery
// Query: *[_type == "project" || _type == "subproject"] {  _id,  _type,  title,  "slug": slug.current,  categories[]->{    title,    "slug": slug.current  },  mainImage {    "image": asset->url,    "lqip": asset->metadata.lqip,    "aspectRatio": asset->metadata.dimensions.aspectRatio,    alt,  },  "parentSlug": select(    _type == "subproject" => *[_type == "project" && references(^._id)][0].slug.current,    null  ),}
export type ProjectsAndSubprojectsQueryResult = Array<
  | {
      _id: string;
      _type: "project";
      title: string | null;
      slug: string | null;
      categories: Array<{
        title: string | null;
        slug: string | null;
      }> | null;
      mainImage: {
        image: string | null;
        lqip: string | null;
        aspectRatio: number | null;
        alt: string | null;
      } | null;
      parentSlug: null;
    }
  | {
      _id: string;
      _type: "subproject";
      title: string | null;
      slug: string | null;
      categories: Array<{
        title: string | null;
        slug: string | null;
      }> | null;
      mainImage: {
        image: string | null;
        lqip: string | null;
        aspectRatio: number | null;
        alt: string | null;
      } | null;
      parentSlug: string | null;
    }
>;
// Variable: singleProjectQuery
// Query: *[_type == "project" && slug.current == $slug][0] {  _id,  title,  body,  categories[]->{    title,    "slug": slug.current  },  blocks[]{    _type == "section-content" => {        _type,  body,    },    _type == "section-header" => {        _type,  _key,  title,    },    _type == "carousel" => {        _type,  _key,  defaultCaption,  items[]{    _type == "imageSlide" => {      _key,      caption,      image {        _type,        alt,        asset-> {          url,          metadata {            lqip,            dimensions {              width,              height,              aspectRatio            }          }        }      },      mobileImage {        _type,        alt,        asset-> {          url,          metadata {            lqip,            dimensions {              width,              height,              aspectRatio            }          }        }      }    },    _type == "videoSlide" => {    _key,      caption,      video {        asset->{            playbackId,            "aspectRatio": data.aspect_ratio        }      },      mobileVideo {        asset->{            playbackId,            "aspectRatio": data.aspect_ratio        }      }    },    _type == "contentSlide" => {    _key,      caption,      content    },  }    },  },  hasSubprojects,  subprojects[]->{    _id,    _key,    title,    categories[]->{      title,      "slug": slug.current    },    "slug": slug.current,    blocks[]{      _type == "section-content" => {        _type,  body,      },      _type == "section-header" => {          _type,  _key,  title,      },      _type == "carousel" => {          _type,  _key,  defaultCaption,  items[]{    _type == "imageSlide" => {      _key,      caption,      image {        _type,        alt,        asset-> {          url,          metadata {            lqip,            dimensions {              width,              height,              aspectRatio            }          }        }      },      mobileImage {        _type,        alt,        asset-> {          url,          metadata {            lqip,            dimensions {              width,              height,              aspectRatio            }          }        }      }    },    _type == "videoSlide" => {    _key,      caption,      video {        asset->{            playbackId,            "aspectRatio": data.aspect_ratio        }      },      mobileVideo {        asset->{            playbackId,            "aspectRatio": data.aspect_ratio        }      }    },    _type == "contentSlide" => {    _key,      caption,      content    },  }      },    }  }  }
export type SingleProjectQueryResult = {
  _id: string;
  title: string | null;
  body: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet";
        markDefs?: Array<
          | {
              itemId?: string;
              _type: "garden-item";
              _key: string;
            }
          | {
              href?: string;
              _type: "link";
              _key: string;
            }
        >;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }
  > | null;
  categories: Array<{
    title: string | null;
    slug: string | null;
  }> | null;
  blocks: Array<
    | {
        _type: "carousel";
        _key: string;
        defaultCaption: string | null;
        items: Array<
          | {
              _key: string;
              caption: Array<
                | {
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
                    listItem?: "bullet";
                    markDefs?: Array<
                      | {
                          itemId?: string;
                          _type: "garden-item";
                          _key: string;
                        }
                      | {
                          href?: string;
                          _type: "link";
                          _key: string;
                        }
                    >;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    alt?: string;
                    _type: "image";
                    _key: string;
                  }
              > | null;
              content: Array<
                | {
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
                    listItem?: "bullet";
                    markDefs?: Array<
                      | {
                          itemId?: string;
                          _type: "garden-item";
                          _key: string;
                        }
                      | {
                          href?: string;
                          _type: "link";
                          _key: string;
                        }
                    >;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    alt?: string;
                    _type: "image";
                    _key: string;
                  }
              > | null;
            }
          | {
              _key: string;
              caption: Array<
                | {
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
                    listItem?: "bullet";
                    markDefs?: Array<
                      | {
                          itemId?: string;
                          _type: "garden-item";
                          _key: string;
                        }
                      | {
                          href?: string;
                          _type: "link";
                          _key: string;
                        }
                    >;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    alt?: string;
                    _type: "image";
                    _key: string;
                  }
              > | null;
              image: {
                _type: "image";
                alt: string | null;
                asset: {
                  url: string | null;
                  metadata: {
                    lqip: string | null;
                    dimensions: {
                      width: number | null;
                      height: number | null;
                      aspectRatio: number | null;
                    } | null;
                  } | null;
                } | null;
              } | null;
              mobileImage: {
                _type: "image";
                alt: string | null;
                asset: {
                  url: string | null;
                  metadata: {
                    lqip: string | null;
                    dimensions: {
                      width: number | null;
                      height: number | null;
                      aspectRatio: number | null;
                    } | null;
                  } | null;
                } | null;
              } | null;
            }
          | {
              _key: string;
              caption: Array<
                | {
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
                    listItem?: "bullet";
                    markDefs?: Array<
                      | {
                          itemId?: string;
                          _type: "garden-item";
                          _key: string;
                        }
                      | {
                          href?: string;
                          _type: "link";
                          _key: string;
                        }
                    >;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    alt?: string;
                    _type: "image";
                    _key: string;
                  }
              > | null;
              video: {
                asset: null;
              } | null;
              mobileVideo: {
                asset: null;
              } | null;
            }
        > | null;
      }
    | {
        _type: "section-header";
        _key: string;
        title: string | null;
      }
    | {
        _type: "section-content";
        body: Array<
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
              listItem?: "bullet";
              markDefs?: Array<
                | {
                    itemId?: string;
                    _type: "garden-item";
                    _key: string;
                  }
                | {
                    href?: string;
                    _type: "link";
                    _key: string;
                  }
              >;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              alt?: string;
              _type: "image";
              _key: string;
            }
        > | null;
      }
  > | null;
  hasSubprojects: boolean | null;
  subprojects: Array<{
    _id: string;
    _key: null;
    title: string | null;
    categories: Array<{
      title: string | null;
      slug: string | null;
    }> | null;
    slug: string | null;
    blocks: Array<
      | {
          _type: "carousel";
          _key: string;
          defaultCaption: string | null;
          items: Array<
            | {
                _key: string;
                caption: Array<
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "blockquote"
                        | "h1"
                        | "h2"
                        | "h3"
                        | "h4"
                        | "normal";
                      listItem?: "bullet";
                      markDefs?: Array<
                        | {
                            itemId?: string;
                            _type: "garden-item";
                            _key: string;
                          }
                        | {
                            href?: string;
                            _type: "link";
                            _key: string;
                          }
                      >;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      alt?: string;
                      _type: "image";
                      _key: string;
                    }
                > | null;
                content: Array<
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "blockquote"
                        | "h1"
                        | "h2"
                        | "h3"
                        | "h4"
                        | "normal";
                      listItem?: "bullet";
                      markDefs?: Array<
                        | {
                            itemId?: string;
                            _type: "garden-item";
                            _key: string;
                          }
                        | {
                            href?: string;
                            _type: "link";
                            _key: string;
                          }
                      >;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      alt?: string;
                      _type: "image";
                      _key: string;
                    }
                > | null;
              }
            | {
                _key: string;
                caption: Array<
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "blockquote"
                        | "h1"
                        | "h2"
                        | "h3"
                        | "h4"
                        | "normal";
                      listItem?: "bullet";
                      markDefs?: Array<
                        | {
                            itemId?: string;
                            _type: "garden-item";
                            _key: string;
                          }
                        | {
                            href?: string;
                            _type: "link";
                            _key: string;
                          }
                      >;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      alt?: string;
                      _type: "image";
                      _key: string;
                    }
                > | null;
                image: {
                  _type: "image";
                  alt: string | null;
                  asset: {
                    url: string | null;
                    metadata: {
                      lqip: string | null;
                      dimensions: {
                        width: number | null;
                        height: number | null;
                        aspectRatio: number | null;
                      } | null;
                    } | null;
                  } | null;
                } | null;
                mobileImage: {
                  _type: "image";
                  alt: string | null;
                  asset: {
                    url: string | null;
                    metadata: {
                      lqip: string | null;
                      dimensions: {
                        width: number | null;
                        height: number | null;
                        aspectRatio: number | null;
                      } | null;
                    } | null;
                  } | null;
                } | null;
              }
            | {
                _key: string;
                caption: Array<
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "blockquote"
                        | "h1"
                        | "h2"
                        | "h3"
                        | "h4"
                        | "normal";
                      listItem?: "bullet";
                      markDefs?: Array<
                        | {
                            itemId?: string;
                            _type: "garden-item";
                            _key: string;
                          }
                        | {
                            href?: string;
                            _type: "link";
                            _key: string;
                          }
                      >;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      alt?: string;
                      _type: "image";
                      _key: string;
                    }
                > | null;
                video: {
                  asset: null;
                } | null;
                mobileVideo: {
                  asset: null;
                } | null;
              }
          > | null;
        }
      | {
          _type: "section-header";
          _key: string;
          title: string | null;
        }
      | {
          _type: "section-content";
          body: Array<
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
                listItem?: "bullet";
                markDefs?: Array<
                  | {
                      itemId?: string;
                      _type: "garden-item";
                      _key: string;
                    }
                  | {
                      href?: string;
                      _type: "link";
                      _key: string;
                    }
                >;
                level?: number;
                _type: "block";
                _key: string;
              }
            | {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                alt?: string;
                _type: "image";
                _key: string;
              }
          > | null;
        }
    > | null;
  }> | null;
} | null;

declare module "@sanity/client" {
  interface SanityQueries {
    '*[_type == "project"] {\n  _id,\n  _createdAt,\n  title,\n  "slug": slug.current,\n  mainImage {\n    "image": asset->url,\n    "lqip": asset->metadata.lqip,\n    "aspectRatio": asset->metadata.dimensions.aspectRatio,\n    alt,\n  },\n \n}': ProjectQueryResult;
    '*[_type == "gardenItem"] {\n  _id,\n  title,\n  "slug": slug.current,\n}': GardenItemsQueryResult;
    '*[_type == "gardenItem" && slug.current == $slug][0] {\n  _id,\n  title,\n  "slug": slug.current,\n  gardenBlocks[]{\n    _type == "imageWithCaption" => {\n      _type,\n      _key,\n      image {\n        "image": asset->url,\n        "lqip": asset->metadata.lqip,\n        "aspectRatio": asset->metadata.dimensions.aspectRatio,\n        alt,\n      },\n      caption\n    },\n    _type == "textGarden" => {\n      _key,\n      _type,\n      text\n    },\n  }\n}': SingleGardenItemQueryResult;
    '*[_type == "project" || _type == "subproject"] {\n  _id,\n  _type,\n  title,\n  "slug": slug.current,\n  categories[]->{\n    title,\n    "slug": slug.current\n  },\n  mainImage {\n    "image": asset->url,\n    "lqip": asset->metadata.lqip,\n    "aspectRatio": asset->metadata.dimensions.aspectRatio,\n    alt,\n  },\n  "parentSlug": select(\n    _type == "subproject" => *[_type == "project" && references(^._id)][0].slug.current,\n    null\n  ),\n}': ProjectsAndSubprojectsQueryResult;
    '*[_type == "project" && slug.current == $slug][0] {\n  _id,\n  title,\n  body,\n  categories[]->{\n    title,\n    "slug": slug.current\n  },\n  blocks[]{\n    _type == "section-content" => {\n      \n  _type,\n  body,\n\n    },\n    _type == "section-header" => {\n      \n  _type,\n  _key,\n  title,\n\n    },\n    _type == "carousel" => {\n      \n  _type,\n  _key,\n  defaultCaption,\n  items[]{\n    _type == "imageSlide" => {\n      _key,\n      caption,\n      image {\n        _type,\n        alt,\n        asset-> {\n          url,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height,\n              aspectRatio\n            }\n          }\n        }\n      },\n      mobileImage {\n        _type,\n        alt,\n        asset-> {\n          url,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height,\n              aspectRatio\n            }\n          }\n        }\n      }\n    },\n    _type == "videoSlide" => {\n    _key,\n      caption,\n      video {\n        asset->{\n            playbackId,\n            "aspectRatio": data.aspect_ratio\n        }\n      },\n      mobileVideo {\n        asset->{\n            playbackId,\n            "aspectRatio": data.aspect_ratio\n        }\n      }\n    },\n    _type == "contentSlide" => {\n    _key,\n      caption,\n      content\n    },\n  }\n\n    },\n  },\n  hasSubprojects,\n  subprojects[]->{\n    _id,\n    _key,\n    title,\n    categories[]->{\n      title,\n      "slug": slug.current\n    },\n    "slug": slug.current,\n    blocks[]{\n      _type == "section-content" => {\n      \n  _type,\n  body,\n\n      },\n      _type == "section-header" => {\n        \n  _type,\n  _key,\n  title,\n\n      },\n      _type == "carousel" => {\n        \n  _type,\n  _key,\n  defaultCaption,\n  items[]{\n    _type == "imageSlide" => {\n      _key,\n      caption,\n      image {\n        _type,\n        alt,\n        asset-> {\n          url,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height,\n              aspectRatio\n            }\n          }\n        }\n      },\n      mobileImage {\n        _type,\n        alt,\n        asset-> {\n          url,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height,\n              aspectRatio\n            }\n          }\n        }\n      }\n    },\n    _type == "videoSlide" => {\n    _key,\n      caption,\n      video {\n        asset->{\n            playbackId,\n            "aspectRatio": data.aspect_ratio\n        }\n      },\n      mobileVideo {\n        asset->{\n            playbackId,\n            "aspectRatio": data.aspect_ratio\n        }\n      }\n    },\n    _type == "contentSlide" => {\n    _key,\n      caption,\n      content\n    },\n  }\n\n      },\n    }\n  }\n  \n}': SingleProjectQueryResult;
  }
}
